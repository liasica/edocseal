syntax = "proto3";

option go_package = "github.com/liasica/edocseal/pb";

package pb;

service Contract {
  // 新增模板
  rpc template(ContractTemplateRequest) returns (ContractTemplateResponse) {}

  // 创建合同
  rpc create(ContractCreateRequest) returns (ContractCreateResponse) {}

  // 合同签署
  rpc sign(ContractSignRequest) returns (ContractSignResponse) {}
}

// 新增模板请求
message ContractTemplateRequest{
  string url = 1; // 合同模板文件地址
  repeated string fields = 2; // 合同模板字段
}

// 新增模板响应
message ContractTemplateResponse {
  string template = 1; // 合同模板编号
}

// 创建合同请求
message ContractCreateRequest{
  string template = 1; // 合同模板编号
  map<string, string> values = 3; // 合同模板字段，key为字段名，value为字段值，勾选选中值为 "On"
}

// 创建合同响应
message ContractCreateResponse{
  string url = 1; // 创建合同合同文件地址
  string sn = 2; // 合同编号
}

message ContractSignEntity{
  string seal = 1; // 签章图片，BASE64编码
  string name = 2; // 签署人
  string province = 3; // 省份
  string city = 4; // 城市
  string address = 5; // 地址
  string phone = 6; // 手机号
  string idcard = 7; // 身份证号
}

// 合同签署请求
// 个签属性和团签属性只能二选一（需要进行限制判定）
// 目前未做整体字段实现，先用sn字段测试
message ContractSignRequest{
  string sn = 1; // 合同编号
  ContractSignEntity sign = 2; // 签署人
}

// 合同签署响应
message ContractSignResponse{
  string status = 1; // 签署状态 SUCCESS:成功，FAIL:失败
  string file = 2; // 已签署合同文件地址
  string message = 3; // 其他消息，例如错误消息，成功时为空
}
